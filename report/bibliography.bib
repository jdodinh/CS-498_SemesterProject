@article{Eisenbrand:277936,
	title = {Proximity Results and Faster Algorithms for Integer  Programming Using the Steinitz Lemma},
	author = {Eisenbrand, Friedrich and Weismantel, Robert},
	publisher = {ASSOC COMPUTING MACHINERY},
	journal = {Acm Transactions On Algorithms},
	address = {New York},
	number = {1},
	volume = {16},
	pages = {5},
	year = {2020},
	abstract = {We consider integer programming problems in standard form  max{c(T)x : Ax = b, x &gt;= 0, x is an element of Z(n)} where  A is an element of Z(mxn), b is an element of Z(m), and c  is an element of Z(n). We show that such an integer program  can be solved in time (m . Delta)(O(m)). parallel to b  parallel to(2)(infinity). where A is an upper hound on each  absolute value of an entry in A. This improves upon the  longstanding best bound of Papadiniitriou [27] of (m .  Delta)(O(m2)), where in addition, the absolute values of  the entries of b also need to be bounded by Delta. Our  result relies on a lemma of Steinitz that states that a set  of vectors in R-m that is contained in the unit ball of a  norm and that sum up to zero can be ordered such that all  partial sums are of norm bounded by m.},
	url = {http://infoscience.epfl.ch/record/277936},
	doi = {10.1145/3340322},
}

@misc{jansen_rohwedder,
	doi = {10.48550/ARXIV.1803.04744},
	
	url = {https://arxiv.org/abs/1803.04744},
	
	author = {Jansen, Klaus and Rohwedder, Lars},
	
	keywords = {Data Structures and Algorithms (cs.DS), FOS: Computer and information sciences, FOS: Computer and information sciences},
	
	title = {On Integer Programming, Discrepancy, and Convolution},
	
	publisher = {arXiv},
	
	year = {2018},
	
	copyright = {arXiv.org perpetual, non-exclusive license}
}


@InCollection{Kozen1992,
author="Kozen, Dexter C.",
title="More NP-Complete Problems",
booktitle="The Design and Analysis of Algorithms",
year="1992",
publisher="Springer New York",
address="New York, NY",
pages="122--127",
abstract="Often in problems with a parameter k like k-CNFSat and k-colorability, larger values of k make the problem harder. This is not always the case. Consider the problem of determining whether a planar graph has a k-coloring. The problem is trivial for k = 1, easy for k = 2 (check by DFS or BFS whether the graph is bipartite, i.e. has no odd cycles), and trivial for k = 4 or greater by the Four Color Theorem, which says that every planar graph is 4-colorable. This leaves k = 3. We show below that 3-colorability of planar graphs is no easier than 3-colorability of arbitrary graphs. This result is due to Garey, Johnson, and Stockmeyer [40]; see also Lichtenstein [72] for some other NP-completeness results involving planar graphs.",
isbn="978-1-4612-4400-4",
doi="10.1007/978-1-4612-4400-4_23",
url="https://doi.org/10.1007/978-1-4612-4400-4_23"
}

@InCollection{Karp1972,
author="Karp, Richard M.",
title="Reducibility among Combinatorial Problems",
booktitle="Complexity of Computer Computations: Proceedings of a symposium on the Complexity of Computer Computations",
year="1972",
publisher="Springer US",
address="Boston, MA",
pages="85--103",
abstract="A large class of computational problems involve the determination of properties of graphs, digraphs, integers, arrays of integers, finite families of finite sets, boolean formulas and elements of other countable domains. Through simple encodings from such domains into the set of words over a finite alphabet these problems can be converted into language recognition problems, and we can inquire into their computational complexity. It is reasonable to consider such a problem satisfactorily solved when an algorithm for its solution is found which terminates within a number of steps bounded by a polynomial in the length of the input. We show that a large number of classic unsolved problems of covering, matching, packing, routing, assignment and sequencing are equivalent, in the sense that either each of them possesses a polynomial-bounded algorithm or none of them does.",
isbn="978-1-4684-2001-2",
doi="10.1007/978-1-4684-2001-2_9",
url="https://doi.org/10.1007/978-1-4684-2001-2_9"
}
